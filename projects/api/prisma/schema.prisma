generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id        String   @id @default(uuid()) @db.Uuid()
  name      String   @unique @db.Citext
  tax       Float
  createdAt DateTime   @default(now()) @map(name: "created_at") @db.Timestamptz()
  updatedAt DateTime   @default(now()) @updatedAt @map(name: "updated_at") @db.Timestamptz()
  suppliers Supplier[]

  @@map(name: "countries")
}

model Category {
  id        String   @id @default(uuid()) @db.Uuid()
  name      String   @unique @db.Citext
  image     String
  createdAt DateTime @default(now()) @map(name: "created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map(name: "update_at") @db.Timestamptz()

  @@map(name: "categories")
}

model Brand {
  id        String   @id @default(uuid()) @db.Uuid()
  name      String   @unique @db.Citext
  logo      String
  createdAt DateTime @default(now()) @map(name: "created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at") @db.Timestamptz()

  @@map(name: "brands")
}

model Supplier {
  id           String   @id @default(uuid()) @db.Uuid()
  email        String   @unique @db.Citext
  deliveryTime Int      @map(name: "delivery_time")
  createdAt    DateTime @default(now()) @map(name: "created_at") @db.Timestamptz()
  updatedAt    DateTime @default(now()) @updatedAt @map(name: "updated_at") @db.Timestamptz()
  countryId    String   @map(name: "country_id") @db.Uuid()
  country      Country  @relation(fields: [countryId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map(name: "suppliers")
}
